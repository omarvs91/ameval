// Mixins

// Breakpoints
$extra-small: 540px; // An intermediate breakpoint not associated with Avada
$small: 730px; // This should match "Small Screen" breakpoint in Avada
$medium: 960px; // An intermediate breakpoint not associated with Avada
$large: 1216px; // This should match the "Large Screen" breakpoint in Avada
$breakpoints: (
  'extrasmall' : 0px,
  'small'  : $extra-small,
  'medium' : $small,
  'medium-large' : $medium,
  'large'  : $large
);

// Usage:
// @include mq(small) { ... }
// @include mq(medium) { ... }
// @include mq(large) { ... }

@mixin mq($breakpoint) {
  // Retrieves the value from the key
  $value: map-get($breakpoints, $breakpoint);

  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media screen and (min-width: calc($value + 0.1px)) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

// Usage:
// @include mq-max(small) { ... }
// @include mq-max(medium) { ... }
// @include mq-max(large) { ... }

@mixin mq-max($breakpoint) {
  // Retrieves the value from the key
  $value: map-get($breakpoints, $breakpoint);

  // If the key exists in the map
  @if $value != null {
    // Prints a media query based on the value
    @media screen and (max-width: $value) {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}